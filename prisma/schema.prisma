// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// creamos la tabla divisions
model Division {
  id           Int         @id @default(autoincrement())
  name         String      @unique @db.VarChar(45)
  level        Int         @db.TinyInt
  status       Boolean     @default(true) @db.TinyInt
  // Agregamos una relacion a la misma tabla Division para la relacion de jerarquia
  parent       Division?   @relation("DivisionToDivision", fields: [parentId], references: [id])
  parentId     Int?
  children     Division[]  @relation("DivisionToDivision")
  // relacion de uno a uno con la tabla ambassadors
  ambassador   Ambassador? @relation(fields: [ambassadorId], references: [id])
  ambassadorId Int?
  employees    Employee[]
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

//creamos la tabla ambassadors
model Ambassador {
  id        Int        @id @default(autoincrement())
  fullName  String     @db.VarChar(100)
  // relacion inversa con la tabla divisions
  divisions Division[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

// creamos table employees
model Employee {
  id         Int      @id @default(autoincrement())
  firstName  String   @db.VarChar(45)
  lastName   String   @db.VarChar(45)
  email      String   @unique @db.VarChar(100)
  phone      String?  @db.VarChar(15)
  status     Boolean  @default(true) @db.TinyInt
  // relacion de muchos a uno con la tabla divisions
  division   Division @relation(fields: [divisionId], references: [id])
  divisionId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

//creamos tabla users
model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique @db.VarChar(100)
  password  String   @db.VarChar(255)
  status    Boolean  @default(true) @db.TinyInt
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
